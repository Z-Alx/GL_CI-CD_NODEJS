---

##########################################################################################################

## PIPELINE DEFINITION
stages:
    - codeStyleCheck
    - test
    - build

#########################################################################################################

### CODE STYLE SECTION
codeStyleCheck:
    stage: codeStyleCheck
    image: node:16.13.1
    script:
        - echo "Linting..."
        - npm install
        - npm run checkPretier
        - npm run eslint
    coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
    artifacts:
        when: always
        reports:
            codequality: gl-codequality.json

### TEST SECTION
test:
    stage: test
    image: node:16.13.1
    script:
        - echo "Testing..."
        - npm install
        - npm run test -- --coverage --watchAll=false --reporters=default --passWithNoTests
    coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
    artifacts:
        when: always
        reports:
            junit:
                - junit.xml

### BUILD SECTION
build:
    stage: build
    image: $NODE_IMAGE:16.13.1
    script:
        #    - npm cache verify
        - echo "Building..."
        - npm ci
        - npm run build
    artifacts:
        expire_in: 2 hour
        paths:
            - build
            - node_modules/

